<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.1.xsd
                    ">


 
	<http auto-config="true">
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/order/**" access="ROLE_USER" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" />
		<!-- enable csrf protection 
		<csrf/>-->
	</http>
 
<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="myDataSource"

				users-by-username-query="
				SELECT LOGIN, PASSWORD, ACTIVE FROM USERS WHERE LOGIN=?"

				authorities-by-username-query="
				SELECT U.LOGIN, R.NAME
				FROM USERS U INNER JOIN USERS_ROLES UR ON U.ID = UR.USER_ID 
				INNER JOIN ROLES R ON UR.ROLE_ID = R.ID
				WHERE U.LOGIN=?" />

		</authentication-provider>
	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

</beans:beans>   